# Add Global DNS entry in /etc/resolv file in all K8S cluster nodes (skip this task if template already has this added)   
- name: add global DNS entry in resolv config file
  blockinfile:
    path: /etc/resolv.conf
    insertafter: EOF
    block: "nameserver 10.228.129.213"
  when: inventory_hostname in groups['kube_cluster_1']

# Stop and Disable Firewall service in all K8S cluster nodes
- name: Stop service firewalld, if started
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: inventory_hostname in groups['kube_cluster_1']

# Stop and Disable SELinux on all K8S cluster nodes
- name: disable SELinux
  command: setenforce 0
  ignore_errors: yes
  when: inventory_hostname in groups['kube_cluster_1']

- name: disable SELinux on reboot
  selinux:
    state: disabled
  when: inventory_hostname in groups['kube_cluster_1']

# Disable swap on all K8S cluster nodes
- name: disable swap
  command: swapoff -a
  when: inventory_hostname in groups['kube_cluster_1']

# Remove swap entry from /etc/fstab from all K8S cluster nodes
- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent
  when: inventory_hostname in groups['kube_cluster_1']

# Enable EPEL Repo on all K8S cluster nodes
- name: install EPEL Repo
  yum:
    name: epel-release
    state: present
    update_cache: true
  when: inventory_hostname in groups['kube_cluster_1']

# Install Docker on all K8S cluster nodes using remote repo link (this is to make sure we install recommended Docker version)
- name: install Docker from a remote repo
  yum:
    name: docker
    state: present
  when: inventory_hostname in groups['kube_cluster_1']

# Start Docker service on all K8S cluster nodes
- name: start Docker
  service:
    name: docker
    enabled: yes
    state: started
  when: inventory_hostname in groups['kube_cluster_1']

# Update all packages
- name: upgrade all packages
  yum:
    name: '*'
    state: latest
  when: inventory_hostname in groups['kube_cluster_1']

# Restart all VMs
- name: Rebooting VMs
  reboot:
  when: inventory_hostname in groups['kube_cluster_1']
